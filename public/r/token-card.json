{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "token-card",
  "type": "registry:component",
  "title": "Token Card",
  "description": "Displays token information in a card layout",
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "registry/new-york/tokens/token-card.tsx",
      "content": "\"use client\";\n\nimport * as React from \"react\";\nimport { Copy, Check, ExternalLink, Sparkles } from \"lucide-react\";\nimport { Token } from \"@/registry/new-york/hooks/useToken\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/registry/new-york/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface TokenCardProps {\n  token: Token | null | undefined;\n}\n\nexport function TokenCard({ token }: TokenCardProps) {\n  const [hasCopied, setHasCopied] = React.useState(false);\n\n  const handleCopy = () => {\n    if (!token) return;\n    navigator.clipboard.writeText(token.address);\n    setHasCopied(true);\n    setTimeout(() => {\n      setHasCopied(false);\n    }, 2000);\n  };\n\n  if (!token) {\n    return (\n      <Card className=\"group relative w-full max-w-md overflow-hidden border-0 bg-gradient-to-br from-white/10 via-white/5 to-transparent backdrop-blur-2xl shadow-2xl transition-all duration-500 hover:shadow-[0_20px_70px_-15px_rgba(255,255,255,0.3)]\">\n        {/* Animated gradient border */}\n        <div className=\"absolute inset-0 rounded-lg bg-gradient-to-r from-blue-500/20 via-purple-500/20 to-pink-500/20 opacity-0 blur-xl transition-opacity duration-500 group-hover:opacity-100\" />\n        \n        {/* Glass effect overlay */}\n        <div className=\"absolute inset-0 rounded-lg border border-white/20\" />\n        \n        <CardHeader className=\"relative z-10\">\n          <CardTitle className=\"flex items-center gap-2 text-transparent bg-clip-text bg-gradient-to-r from-blue-400 to-purple-400\">\n            <Sparkles className=\"h-5 w-5 text-purple-400\" />\n            Token Information\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"relative z-10\">\n          <div className=\"flex h-32 items-center justify-center\">\n            <p className=\"text-center text-gray-400\">No token selected.</p>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"group relative w-full max-w-md overflow-hidden border-0 bg-gradient-to-br from-white/10 via-white/5 to-transparent backdrop-blur-2xl shadow-2xl transition-all duration-500 hover:shadow-[0_20px_70px_-15px_rgba(255,255,255,0.3)] hover:scale-[1.02]\">\n      {/* Animated gradient background */}\n      <div className=\"absolute -inset-1 rounded-lg bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 opacity-20 blur-2xl transition-all duration-500 group-hover:opacity-40\" />\n      \n      {/* Shimmer effect */}\n      <div className=\"absolute inset-0 opacity-0 transition-opacity duration-500 group-hover:opacity-100\">\n        <div className=\"absolute inset-0 -translate-x-full animate-[shimmer_2s_infinite] bg-gradient-to-r from-transparent via-white/10 to-transparent\" />\n      </div>\n\n      {/* Glass effect border */}\n      <div className=\"absolute inset-0 rounded-lg border border-white/20\" />\n      \n      {/* Inner glow */}\n      <div className=\"absolute inset-0 rounded-lg bg-gradient-to-b from-white/5 to-transparent\" />\n\n      <CardHeader className=\"relative z-10 border-b border-white/10 p-6\">\n        <div className=\"flex items-center gap-4\">\n          <div className=\"relative\">\n            {/* Avatar glow effect */}\n            <div className=\"absolute -inset-2 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 opacity-30 blur-lg transition-all duration-300 group-hover:opacity-60\" />\n            <Avatar className=\"relative h-16 w-16 ring-2 ring-white/20 shadow-xl transition-all duration-300 group-hover:ring-white/40 group-hover:scale-110\">\n              <AvatarImage src={token.logoURI} alt={token.name} className=\"object-cover\" />\n              <AvatarFallback className=\"bg-gradient-to-br from-blue-500 via-purple-500 to-pink-500 text-white font-bold text-lg\">\n                {token.symbol.slice(0, 2)}\n              </AvatarFallback>\n            </Avatar>\n          </div>\n          <div className=\"flex-1\">\n            <CardTitle className=\"text-3xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-white via-blue-100 to-purple-100 tracking-tight\">\n              {token.name}\n            </CardTitle>\n            <div className=\"mt-1 flex items-center gap-2\">\n              <span className=\"inline-flex items-center rounded-full bg-white/10 px-3 py-1 text-sm font-medium text-gray-200 backdrop-blur-sm\">\n                {token.symbol}\n              </span>\n            </div>\n          </div>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"relative z-10 p-6\">\n        <div className=\"space-y-5\">\n          {/* Address Section */}\n          <div className=\"group/item rounded-lg bg-white/5 p-4 backdrop-blur-sm transition-all duration-300 hover:bg-white/10\">\n            <div className=\"flex items-start justify-between gap-3\">\n              <div className=\"flex-1\">\n                <span className=\"mb-2 block text-xs font-medium uppercase tracking-wider text-gray-400\">\n                  Contract Address\n                </span>\n                <span className=\"block break-all font-mono text-sm text-white/90\">\n                  {token.address}\n                </span>\n              </div>\n              <div className=\"flex gap-1\">\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-8 w-8 text-gray-400 hover:bg-white/10 hover:text-white transition-all duration-200\"\n                  onClick={handleCopy}\n                  title=\"Copy address\"\n                >\n                  {hasCopied ? (\n                    <Check className=\"h-4 w-4 text-emerald-400\" />\n                  ) : (\n                    <Copy className=\"h-4 w-4\" />\n                  )}\n                </Button>\n                <Button\n                  variant=\"ghost\"\n                  size=\"icon\"\n                  className=\"h-8 w-8 text-gray-400 hover:bg-white/10 hover:text-white transition-all duration-200\"\n                  onClick={() => window.open(`https://solscan.io/token/${token.address}`, '_blank')}\n                  title=\"View on Solscan\"\n                >\n                  <ExternalLink className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Info Grid */}\n          <div className=\"grid grid-cols-2 gap-3\">\n            {/* Decimals */}\n            <div className=\"rounded-lg bg-gradient-to-br from-blue-500/10 to-purple-500/10 p-4 backdrop-blur-sm border border-white/10 transition-all duration-300 hover:border-white/20\">\n              <span className=\"mb-1 block text-xs font-medium uppercase tracking-wider text-gray-400\">\n                Decimals\n              </span>\n              <span className=\"block text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-300 to-purple-300\">\n                {token.decimals}\n              </span>\n            </div>\n\n            {/* Tags Count */}\n            <div className=\"rounded-lg bg-gradient-to-br from-purple-500/10 to-pink-500/10 p-4 backdrop-blur-sm border border-white/10 transition-all duration-300 hover:border-white/20\">\n              <span className=\"mb-1 block text-xs font-medium uppercase tracking-wider text-gray-400\">\n                Tags\n              </span>\n              <span className=\"block text-2xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-purple-300 to-pink-300\">\n                {token.tags?.length || 0}\n              </span>\n            </div>\n          </div>\n\n          {/* Tags Display */}\n          {token.tags && token.tags.length > 0 && (\n            <div className=\"rounded-lg bg-white/5 p-4 backdrop-blur-sm\">\n              <span className=\"mb-3 block text-xs font-medium uppercase tracking-wider text-gray-400\">\n                Token Tags\n              </span>\n              <div className=\"flex flex-wrap gap-2\">\n                {token.tags.map((tag, index) => (\n                  <span\n                    key={tag}\n                    className=\"inline-flex items-center gap-1 rounded-full bg-gradient-to-r from-blue-500/20 to-purple-500/20 px-3 py-1.5 text-xs font-medium text-white backdrop-blur-sm border border-white/10 transition-all duration-200 hover:scale-105 hover:border-white/20\"\n                    style={{\n                      animationDelay: `${index * 100}ms`,\n                    }}\n                  >\n                    <div className=\"h-1.5 w-1.5 rounded-full bg-gradient-to-r from-blue-400 to-purple-400\" />\n                    {tag}\n                  </span>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </CardContent>\n\n      <style jsx>{`\n        @keyframes shimmer {\n          100% {\n            transform: translateX(100%);\n          }\n        }\n      `}</style>\n    </Card>\n  );\n}",
      "type": "registry:component"
    }
  ]
}